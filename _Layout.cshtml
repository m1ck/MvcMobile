@{
    char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();    
}

<!DOCTYPE html> 
<html>

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1"> 
	<title>GSU Directory</title> 
	        <link href="@System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl("~/Content/css")" rel="stylesheet" type="text/css" />
           <script src="@System.Web.Optimization.BundleTable.Bundles.ResolveBundleUrl("~/Scripts/js")"></script>
 
 	
    <script src="@Url.Content("~/Scripts/dust-full-0.3.0.min.js")" type="text/javascript"></script>

<style type="text/css" >
	.ui-page {
    -webkit-backface-visibility: hidden;
}
	
	
	.ui-page * {
-webkit-transform: rotateY(0deg);
-moz-transform: rotateY(0deg);
transform: rotateY(0deg);
}
	
	</style> 
	<script type="text/javascript">
  var lastsearch="xxx";

        var delay = (function(){
          var timer = 0;
          return function(callback, ms){
            clearTimeout (timer);
            timer = setTimeout(callback, ms);
          };
        })();


function customFunctionName( text, searchString) {
        if (lastsearch !=searchString) {
	        var namelst = searchString;
	        $.ajax({
            url: myUrl,
            dataType: 'json',
            async: false,
            data: myData,
            success: function(data) {
              //stuff
            }
          });
	        
	        
	        
	        $.getJSON("http://netdevone.gsu.edu/directory/api/Person?givenName="+ namelst +"&sn=", displayEmployee);
         }
         lastsearch=searchString;
	    }

function exactMatch( text, searchString ) {
return !( text.toLowerCase() == searchString );
};

	    $(document).bind("mobileinit", function () {
	        $.mobile.touchOverflowEnabled = true;
	        
	        // $.mobile.listview.prototype.options.filterCallback = function( text, searchValue ) {
        // only show items that *begin* with the search string
       // alert(sad);
       // return text.toLowerCase().substring( 0, searchValue.length ) !== searchValue;
    //};
	    });


	    $(document).ready(function () {
	    $('#actionList').listview( 'option', 'filterPlaceholder', 'Search...faculty' );
	    
	    	       $('#actionList').listview( 'option', 'filterCallback', customFunctionName );

	        $("input[id^='search']").keyup(function () { delay(function(){
                  ajaxsearch(); }, 500 );            
             });
            $('#searchform').submit(function() {
                    //ajaxsearch();
                    //$('#target').blur();
                    document.searchform.criteria.value = $("#selectcriteria").val();
                    $('#criteria').val( $("#selectcriteria").val());
                    document.getElementById('criteria').value = $("#selectcriteria").val();
                    document.forms["searchform"].submit();
                      
                     
                   return false;
            });
	    });





	    function ajaxsearch() {
	        namelst = $("#search").val();
	        $.getJSON("http://netdevone.gsu.edu/directory/api/Person?givenName="+ namelst +"&sn=", displayEmployee);
	    }


	    $('#detailsPage').live('pagebeforeshow', function (event , data) {
         //alert(event.currentTarget.dataset.url);
	        var id = getUrlVar(event.currentTarget.dataset.url)["id"];
             //var campusid = id;
             //var id = getUrlVar()["id"];
            //$('a').live('click', function(e) {
             //  campusid = $(e.target).jqmData("campusid");               
               // $.getJSON("http://netdevone.gsu.edu/directory/api/Person/" + campusid, displayEmployeeDetail);
            //  }
            // )
         
	       $.getJSON("http://netdevone.gsu.edu/directory/api/Person/"+id, displayEmployeeDetail);
	    });



	    function displayEmployee(data) {
	        var employee = data.item;
	        //var source ="{#items}<li><a href='#two?id={id}'><h4>{firstName} {lastName}</h4><p>{title}</p><span class='ui-li-count'>{reportCount}</span></a></li>{/items}";
	        // $("#actionListTemplate" ).tmpl( employee ).appendTo( "#actionList" );



	        //var source ="{#items2}<li><a href='#detailsPage?id={id}' data-transition='slide'>{firstName} {lastName}</a></li>{/items2}";

	        var source = "{?A}\n" +
                "<li data-role='list-divider'>A</li>" +
                "    {#A}\n" +
                "      {~s} <li><a href='#detailsPage?id={sn}' data-transition='slide'>{cn} </a></li>{~n}\n" +
                "    {/A}\n" +
                "{:else}\n" +
                "  No Tags!\n" +
                "{/A}\n" +
                "{~n}\n" +
                "{^B}\n" +
                "  No Likes!\n" +
                "{:else}\n" +
                "<li data-role='list-divider'>b</li>" +
                "    {#B}\n" +
                "      {~s} <li><a href='#detailsPage?id={sn}' data-transition='slide'>{cn} </a></li>{~n}\n" +
                "    {/B}\n" +
                "{/B}" +
                "{~n}\n" +
                "{^C}\n" +
                "  No Likes!\n" +
                "{:else}\n" +
                "<li data-role='list-divider'>C</li>" +
                "    {#C}\n" +
                "      {~s} <li><a href='#detailsPage?id={sn}' data-transition='slide'>{cn} </a></li>{~n}\n" +
                "    {/C}\n" +
                "{/C}";
                 var source2 =" @foreach (var ltr in alpha)
                 {                    
                       @Html.Raw("{~n}{^")@ltr@Html.Raw("}" );
                       @Html.Raw(" " );
                       @Html.Raw("{:else}" );
                       @Html.Raw("<li data-role='list-divider'>" );@ltr @Html.Raw("</li>" );
                       @Html.Raw("{#"); @ltr  @Html.Raw("}" );
                       @Html.Raw("{~s} <li><a href='#detailsPage?id={eduPersonPrincipalName}'  data-campusid='{eduPersonPrincipalName}' data-transition='slide'>{cn} </a></li>{~n}" );
                       @Html.Raw("{/"); @ltr  @Html.Raw("}" );
                       @Html.Raw("{/"); @ltr  @Html.Raw("}" );                      
                       @Html.Raw("{~n}" );
                 } ";    

	        dust.loadSource(dust.compile(source2, "array"));
	        dust.render("array", data[0], function (err, out) {
	            $("#actionList").html(out);
	        });
	        $('#actionList').listview('refresh');
	    }


           
	    function displayEmployeeDetail(data) {
       
	        var employee = data.item;
	        //var source ="{#items}<li><a href='#two?id={id}'><h4>{firstName} {lastName}</h4><p>{title}</p><span class='ui-li-count'>{reportCount}</span></a></li>{/items}";
	        // $("#actionListTemplate" ).tmpl( employee ).appendTo( "#actionList" );
	        var source = "<a href='#' data-role='button' data-rel='dialog' id='cnblock' >{cn}</a><a href='#' data-role='button' data-rel='dialog' id='cnmail' >{mail}</a>";
	        dust.loadSource(dust.compile(source, "replace"));
	        dust.render("replace", data[0], function (err, out) {
	            $("#employeeDetails").html(out);
	        });
            $('#cnblock').button();$('#cnmail').button();
	       // $('#employeeDetails').listview('refresh');
	    }


	    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	    function getUrlVars() {
	        var vars = [], hash;
	        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
	        for (var i = 0; i < hashes.length; i++) {
	            hash = hashes[i].split('=');
	            vars.push(hash[0]);
	            vars[hash[0]] = hash[1];
	        }
	        return vars;
	    }

         ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	    function getUrlVar(url) {
	        var vars = [], hash;
	        var hashes = url.slice(url.indexOf('?') + 1).split('&');
	        for (var i = 0; i < hashes.length; i++) {
	            hash = hashes[i].split('=');
	            vars.push(hash[0]);
	            vars[hash[0]] = hash[1];
	        }
	        return vars;
	    }

 </script>
</head> 

	
<body> 



	<div data-role="page" class="type-interior">

		
	
	  <div data-role="content">
	  
	  
				@RenderBody()
		   </div><!--/content-primary -->
	  </div><!-- /page -->
	
	
	
	
	
	<div id="detailsPage" data-role="page" data-add-back-btn="true" >

	        <div data-role="header" data-theme="b">
		        <h1> Details </h1>
	        </div>

          <div data-role="content"> 

          <div  id="employeeDetails">  </div> 
      


          

  </div>

</div>